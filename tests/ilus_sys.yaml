# Configuration file specifying system details for running ilus analysis pipeline

# Common datasets
resources:
  # For human reference (recommend `GCA_000001405.15_GRCh38_no_alt_analysis_set.fa`)
  # Preparing reference file for use:
  # 1. Generate the BWA index: bwa index human_GRCh38.fa
  # 2. Generate the Fasta index: samtools faidx human_GRCh38.fa
  # 3. Generate the sequencing dictionary:
  #    java -jar picard.jar CreateSequenceDictionary \
  #       REFERENCE=human_GRCh38.fa \
  #       OUTPUT=human_GRCh38.dict
  reference: human_GRCh38.fa   # set to be a full directory path of `human_GRCh38.fa`

  # Default adapter sequence is **BGISEQ-500/MGISEQ/DNBSEQ** in ilus.
  # If you use illumina (or other) sequencing platform you should change the value of this parameter.
  # The most widely used adapter in Illumina is TruSeq adapters. If your data is from the TruSeq library,
  # you can replace the value with the two following sequences:
  # adapter_sequence: [AGATCGGAAGAGCACACGTCTGAACTCCAGTCA, AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT]
  adapter_sequence: [AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA, AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG]

  # bundle datasets (GRCh38)
  bundle:
    hapmap: /path/to/gatk/bundle/hg38/hapmap_3.3.hg38.vcf.gz
    omni: /path/to/gatk/bundle/hg38/1000G_omni2.5.hg38.vcf.gz
    1000G: /path/to/gatk/bundle/hg38/1000G_phase1.snps.high_confidence.hg38.vcf.gz
    mills: /path/to/gatk/bundle/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz
    1000G_known_indel: /path/to/gatk/bundle/hg38/Homo_sapiens_assembly38.known_indels.vcf.gz
    dbsnp: /path/to/gatk/bundle/hg38/Homo_sapiens_assembly38.dbsnp138.vcf.gz


# Common tools
cleanfastq:
  # `could be any suitable fastq cleaning program`
  soapnuke: /path/to/SOAPnuke
  soapnuke_options: [-T 12 -m 15 -n 0.01 -l 10 -q 0.1 -M 2 --adaMR 0.25 --polyX 50 --minReadLen 100, "--trim 0,0,0,0",
                     -f AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA -r AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG]
aligner:
  bwa: /path/to/bwa

  # The results of this call are dependent on the number of threads used.
  # To have number of threads independent results, add chunk size option -K 10000000
  bwamem_options: [-Y -M -t 8 -K 10000000]

samtools:
  samtools: /path/to/samtools
  sort_options: [-@ 8]
  merge_options: [-@ 8 -f]
  stats_options: [-@ 8]

bcftools:
  bcftools: /path/to/bcftools
  # Parameter for concat VCF files
  concat_options: [--threads 12 -a --rm-dups all]

bedtools:
  bedtools: /path/to/bedtools
  genomecov_options: [-bga -split]

verifyBamID2:
  # The URL link of VerifyBamID2: https://github.com/Griffan/VerifyBamID
  verifyBamID2: /path/to/verifyBamID2
  options: [
    # download from: https://github.com/Griffan/VerifyBamID/tree/master/resource
    --SVDPrefix /path/to/verifyBamID2/1.0.6/resource/1000g.phase3.10k.b38.vcf.gz.dat
  ]

bgzip: /path/to/bgzip
tabix: /path/to/tabix


gatk:
  gatk: /path/to/BioSoftware/gatk
  markdup_java_options: [-Xmx10G, -Djava.io.tmpdir=/your_path/cache]
  bqsr_java_options: [-Xmx8G, -Djava.io.tmpdir=/your_path/cache]
  hc_gvcf_java_options: [-Xmx4G]
  combineGVCFs_java_options: [-Xmx32G]  # java options for GATK genomicsDBImport or CombineGVCFs
  genotype_java_options: [-Xmx10G]      # java options for GATK GenotypeGVCFs
  vqsr_java_options: [-Xmx10G]

  CollectAlignmentSummaryMetrics_jave_options: [-Xmx10G]
  CollectAlignmentSummaryMetrics_options: []

  hc_gvcf_options: []
  use_genomicsDBImport: false  # Use CombineGVCFs(default) or genomicsDBImport to combine GVCFs
  genomicsDBImport_options: [--tmp-dir /your_path/cache,
                             --batch-size 100,
                             --reader-threads 12,
                             --overwrite-existing-genomicsdb-workspace true]
  genotypeGVCFs_options: [--max-alternate-alleles 4]

  # VQSR
  vqsr_snp_options: [
    -an QD,
    -an MQ,
    -an MQRankSum,
    -an ReadPosRankSum,
    -an FS,
    -an SOR,
    -an DP,
    -tranche 100.0 -tranche 99.9 -tranche 99.5 -tranche 99.0 -tranche 95.0 -tranche 90.0,
  ]
  vqsr_indel_options: [
    -an QD,
    -an MQRankSum,
    -an ReadPosRankSum,
    -an FS,
    -an SOR,
    -an DP,
    -tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 95.0 -tranche 92.0 -tranche 90.0,
  ]
  # maximum number of Gaussians that will be used for the positive recalibration model in VQSR
  vqsr_snp_max_gaussians: 8
  vqsr_indel_max_gaussians: 4
  apply_snp_vqsr_options: [--truth-sensitivity-filter-level 99.5]
  apply_indel_vqsr_options: [--truth-sensitivity-filter-level 99.0]


# Setting parameter for Sentieon. Optional
sentieon:
  sentieon: /path/to/BioSoftware/sentieon
  sentieon_driver_options: [-t 24]

  # The results of this call are dependent on the number of threads used.
  # To have number of threads independent results, add chunk size option -K 10000000
  bwamem_options: [-Y -M -t 24 -K 10000000]
  util_sort_options: [-t 24]

  # Option for remove Duplicate Reads.
  # mark instead of remove duplicates by ommitting the --rmdup option in Dedup.
  LocusCollector_options: []

  dedup_options: []  # [--rmdup]
  indel_realigner_options: []
  bqsr_recaltable_options: []  # [--cycle_val_max xxx]

  # 'emit_mode' in HaplotypeCaller: determines what calls will be emitted. Possible values for mode are:
  #    - variant: emit calls only at confident variant sites. This is the default behavior.
  #    - confident: emit calls at confident variant sites or confident reference sites.
  #    - all: emit all calls, regardless of their confidence.
  #    - gvcf: emits additional information required for joint calling.
  #        This option is required if you want to perform joint calling using the
  #        GVCFtyper algorithm.
  hc_options: [--emit_mode gvcf]

  # 'emit_mode' in GVCFtyper: determines what calls will be emitted. Possible values for mode are:
  #    - variant: emit calls only at confident variant sites. This is the default behavior.
  #    - confident: emit calls at confident variant sites or confident reference sites.
  #    - all: emit all calls, regardless of their confidence.
  gvcftyper_options: [--emit_mode variant]

  # VQSR.
  ## No need to set `--var_type` option which will be set automatically by ilus
  vqsr_snp_options: [
    --annotation QD,
    --annotation MQ,
    --annotation FS,
    --annotation MQRankSum,
    --annotation ReadPosRankSum,
    --annotation SOR,
    --annotation DP,
    --tranche 100.0 --tranche 99.9 --tranche 99.5 --tranche 99.0 --tranche 95.0 --tranche 90.0,
    --max_neg_gaussians 2,
  ]
  vqsr_indel_options: [
    --annotation QD,
    --annotation FS,
    --annotation MQRankSum,
    --annotation ReadPosRankSum,
    --annotation SOR,
    --annotation DP,
    --tranche 100.0 --tranche 99.9 --tranche 99.0 --tranche 95.0 --tranche 92.0 --tranche 90.0,
    --max_neg_gaussians 2,
  ]
  ## maximum number of Gaussians that will be used for the positive recalibration model in VQSR.
  vqsr_snp_max_gaussians: 8
  vqsr_indel_max_gaussians: 4
  apply_snp_vqsr_options: [--sensitivity 99.5]
  apply_indel_vqsr_options: [--sensitivity 99.0]

  # Option for alignment metrics
  # '--omit_base_output' skip the output of the per locus coverage with no partition.
  # This option can be used when you do not use intervals to save space.
  coverage_options: [--omit_base_output]

